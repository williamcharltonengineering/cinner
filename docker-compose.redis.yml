version: '3'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --stop-writes-on-bgsave-error no
    networks:
      - presis-network

  app:
    build:
      context: .
      dockerfile: infra/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PRESIS_NO_FSDB=True
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      # Admin credentials - change these to secure values
      - ADMIN_EMAIL=admin@example.com
      - ADMIN_PASSWORD=adminpassword
      # Add your Stripe API keys here
      - STRIPE_API_KEY=your_stripe_api_key
      - STRIPE_PUBLISHABLE_KEY=your_stripe_publishable_key
      - STRIPE_WEBHOOK_SECRET=your_stripe_webhook_secret
      # Flask secret key
      - SECRET_KEY=change_this_to_a_random_string
    volumes:
      - ./.env:/app/.env:ro  # Mount .env file as read-only
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - presis-network

volumes:
  redis-data:

networks:
  presis-network:

# To update the admin password:
# 1. Change the ADMIN_PASSWORD environment variable above
# 2. Restart the container:
#    docker-compose -f docker-compose.redis.yml down
#    docker-compose -f docker-compose.redis.yml up -d
# 
# Alternatively, you can run the update_admin_password.py script:
#    ADMIN_EMAIL=admin@example.com ADMIN_PASSWORD=new_password PRESIS_NO_FSDB=True \
#    REDIS_HOST=localhost REDIS_PORT=6379 python update_admin_password.py
